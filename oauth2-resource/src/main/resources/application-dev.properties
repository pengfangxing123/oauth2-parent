#server.port=8081
#server.servlet.context-path=/resource
#
#spring.main.allow-bean-definition-overriding=true
#
#security.oauth2.client.client-id=OrderManagement
##security.oauth2.client.client-secret=$2a$10$fsplYnTSl22bb.DTIwqTQOubzNlGH4ukEBERUqUA0JPqWKtwR2kye
#security.oauth2.client.client-secret=order123
#security.oauth2.client.access-token-uri=http://localhost:8080/oauth/token
#security.oauth2.client.user-authorization-uri=http://localhost:8080/oauth/authorize
##JWT token的URI. 当key为公钥时，或者value不指定时指定(非对称加密时获取公钥 key 进行解码).
#security.oauth2.resource.jwt.key-uri=http://localhost:8080/oauth/token_key
##JWT token验证的value. 可以是对称加密或者PEMencoded RSA公钥. 可以使用URI作为value
#security.oauth2.resource.jwt.key-value=duichengjiami


server.port=8083
server.servlet.context-path=/resource

spring.main.allow-bean-definition-overriding=true

security.oauth2.client.client-id=resource
#security.oauth2.client.client-secret=$2a$10$fsplYnTSl22bb.DTIwqTQOubzNlGH4ukEBERUqUA0JPqWKtwR2kye
security.oauth2.client.client-secret=resource
security.oauth2.client.access-token-uri=http://localhost:8080/oauth/token
security.oauth2.client.user-authorization-uri=http://localhost:8080/oauth/authorize
#检查令牌
security.oauth2.resource.token-info-uri: http://localhost:8080/oauth/check_token 
#JWT token验证的value. 可以是对称加密或者PEMencoded RSA公钥. 可以使用URI作为value
security.oauth2.resource.jwt.key-value=duichengjiami

security.oauth2.resource.id=reource_id